import dataclasses
import pytest
import pandas
import typing as tp


@dataclasses.dataclass
class Case:
    data: list[tuple[tp.Any, ...]]
    path_to_file: str


USER_INFO = [
    (1891, 'Абабков', 'Валентин', 'Анатольевич'),
    (2168826, 'Абакаров', 'Абдулла', 'Мурадович'),
    (4719, 'Абакумов', 'Евгений', 'Васильевич'),
    (3048, 'Абалян', 'Анна', 'Игоревна'),
    (5464, 'Аббасов', 'Меджид', 'Эльхан оглы'),
    (1892, 'Абгаджава', 'Даур', 'Арнольдович'),
    (2166097, 'Абдреева', 'Алла', 'Юрьевна'),
    (76391, 'Абдулина', 'Бэлла', 'Марсельевна'),
    (4306, 'Абдулкадырова', 'Зарина', 'Кудратовна'),
    (2166655, 'Абдуллаев', 'Александр', 'Максимович'),
    (37058, 'Абдуллаев', 'Ясын', 'Сахиб оглы'),
    (3288, 'Абдульманова', 'Аделя', 'Хамитовна'),
    (19449, 'Абдурахманов', 'Абдурахман', 'Ибрагимхалилович'),
    (10781, 'Абдушелишвили', 'Георгий', 'Леванович'),
    (11763, 'Абрамов', 'Максим', 'Викторович'),
    (10990, 'Абрамов', 'Нафтали', 'Нахшунович'),
    (2166666, 'Абрамова', 'Дарья', 'Игоревна')
]

DIVISION_INFO = [
    ('276fad0c-67c3-40ca-9d3e-21c762ced16e', 'AGSM', 'Академическая гимназия'),
    ('f0f4466b-ecfd-4bd6-b8ae-a63e5a4efa38', 'BIOL', 'Биология'),
    ('60c25250-c555-4e52-967c-42d3eb6b26a0', 'ORIS', 'Востоковедение'),
    ('ee117d32-c57d-4a4e-809c-b388b81af66c', 'JOUR', 'Журналистика, Прикладные коммуникации'),
    ('b1a2450b-46b8-45c9-9149-cdb801475fbe', 'FL', 'Иностранные языки'),
    ('f8fa4509-adda-4362-b4cd-26e2c28f94a3', 'IDAR', 'Институт развития конкуренции и антимонопольного регулирования СПбГУ'),
    ('b83b325a-556d-4aad-b243-aaede3649106', 'ARTS', 'Искусства'),
    ('1e57eea2-0ad3-4797-bf7e-0b59435b8b67', 'HIST', 'История'),
    ('8ab57510-b26f-4b60-84b3-a1b083364e33', 'COGN', 'Когнитивные исследования'),
    ('12f5ea12-d719-493e-951d-3fe65b7d97be', 'SC', 'Колледж физической культуры и спорта, экономики и технологии'),
    ('597a75b1-0e3c-4fe8-9ee8-4a0cd6f7d4c3', 'MCSC', 'Математика и компьютерные науки'),
    ('d92b7020-54be-431d-8b06-5aea117e5bfa', 'MATH', "Математика, Механика"),
    ('68c3b52d-9591-446f-9112-098313314cc8', 'MEDI', 'Медицина'),
    ('88bd6fbb-72fd-4d64-bb6d-255e462ceed4', 'INTD', 'Междисциплинарные программы'),
    ('be9dbede-f1f9-4616-9bc5-8a64a617d235', 'INTR', 'Международные отношения'),
    ('9f629209-c05b-4ff4-aa55-1a37df5dee5e', 'GSOM', 'Менеджмент'),
    ('6234d59c-2837-4e88-9373-5fd9ff65f06e', 'EARTH', 'Науки о Земле'),
    ('59263a1f-de43-4b6f-9cf5-beb727e577bc', 'PEDG', 'Педагогика'),
    ('e5f72df1-feef-441c-9b0a-f4c7e245f5cd', 'POLS', 'Политология'),
    ('947929b0-db62-475d-ba5f-7d5fe7a9203b', 'AMCP', 'Процессы управления'),
    ('3cb0f849-352e-421b-9c95-2720ef163556', 'PSYC', 'Психология'),
    ('8bb888f3-2dfa-4bd3-978c-603a14883883', 'LIAS', 'Свободные искусства и науки'),
    ('b7031c68-8ea4-4a8f-a58c-b126ab2db7ec', 'SOCL', 'Социология'),
    ('5da32ed0-ba13-46d4-b92a-25b5a5e6f6c0', 'DENT', 'Стоматология и медицинские технологии'),
    ('11071477-336d-491f-8e87-ab2d3b95eefc', 'THEO', 'Теология'),
    ('1ebdff8f-95c1-4aa5-9cb6-f3b1b9f268bb', 'RD', 'Управление научных исследований'),
    ('7dc53f91-6f46-44e2-87f3-919fd2fef116', 'PHYS', 'Физика'),
    ('7b6f59ac-2136-434b-b344-3930fb4b0110', 'LETT', 'Филология'),
    ('b1e36bd4-dfdb-4d95-a45e-6c016d8158d1', 'PHIL', 'Философия'),
    ('450fef2e-52c7-4174-add4-282c0eda90c7', 'CHEM', 'Химия'),
    ('42afcf59-752e-4295-98d9-2f2be96d9416', 'ECON', 'Экономика'),
    ('c2c8b759-8c1e-4d19-82a8-74ce851e843a', 'LAWS','Юриспруденция')
]

PROGRAM_INFO = [
    (13858, 'Technology Programming', 'bachelor studies', 2022),
    (12979, 'Technology Programming', 'bachelor studies', 2021),
    (12085, 'Technology Programming', 'bachelor studies', 2020),
    (13895, 'Software Engineering', 'bachelor studies', 2022),
    (12889, 'Software Engineering', 'bachelor studies', 2021),
    (11929, 'Software Engineering', 'bachelor studies', 2020),
    (11096, 'Software Engineering', 'bachelor studies', 2019),
    (9989, 'Software Engineering', 'bachelor studies', 2018),
    (11295, 'Software and Administration of Information Systems', 'bachelor studies', 2019),
    (9988, 'Software and Administration of Information Systems', 'bachelor studies', 2018),
    (12847, 'Applied Mathematics and Computer Science', 'bachelor studies', 2021),
    (11888, 'Applied Mathematics and Computer Science', 'bachelor studies', 2020),
    (11094, 'Applied Mathematics and Computer Science', 'bachelor studies', 2019),
    (10017, 'Applied Mathematics and Computer Science', 'bachelor studies', 2018),
]

GROUP_INFO = [
    (334044, '22.Б10-мм', 'очная', 13858),
    (334037, '22.Б09-мм', 'очная', 13858),
    (334407, '22.Б08-мм', 'очная', 13858),
    (334472, '22.Б07-мм', 'очная', 13858),
    (334758, '21.Б10-мм', 'очная', 12979),
    (334760, '21.Б09-мм', 'очная', 12979),
    (334733, '21.Б08-мм', 'очная', 12979),
    (334738, '21.Б07-мм', 'очная', 12979),
    (334462, '22.Б11-мм', 'очная', 13895),
    (334091, '22.Б15-мм', 'очная', 13895),
    (334755, '21.Б11-мм', 'очная', 12889),
    (334756, '20.Б11-мм', 'очная', 11929),
    (334768, '19.Б11-мм', 'очная', 11096),
    (334336, '22.Б13-мм', 'очная', 13847),
    (334743, '21.Б13-мм', 'очная', 12890),
    (334772, '20.Б13-мм', 'очная', 11930),
    (334744, '19.Б13-мм', 'очная', 11250),
    (334776, '21.Б06-мм', 'очная', 12847),
    (334774, '21.Б05-мм', 'очная', 12847),
    (334757, '21.Б04-мм', 'очная', 12847),
    (334742, '20.Б06-мм', 'очная', 11888),
    (334734, '20.Б04-мм', 'очная', 11888),
    (334730, '19.Б06-мм', 'очная', 11094),
    (334725, '19.Б05-мм', 'очная', 11094),
    (334766, '19.Б04-мм', 'очная', 11094),
]

EVENTS_INFO = [
('2023-06-05 14:00:00', '2023-06-05 15:35:00',
'Практикум на ЭВМ, зачёт (пересдача)',
'Университетский проспект, д. 28, лит. Д,405', 2690, 334462),
('2023-06-19 10:00:00', '2023-06-19 11:35:00',
'Программирование на языке C, экзамен',
'Университетский проспект, д. 28, лит. Д, 3315', 2690, 334458),
('2023-06-30 12:00:00', '2023-06-30 13:35:00',
'Основы программирования, экзамен',
'Университетский проспект, д. 28, лит. В,3389', 2690, 334091),
('2023-06-08 15:00:00', '2023-06-08 17:00:00',
'Защита выпускной квалификационной работы , апелляционная комиссия',
'Университетский проспект, д. 28, лит. В, 3381', 2751, 334762),
('2023-06-26 15:00:00', '2023-06-26 16:35:00',
'Геометрия и топология, консультация групповая',
'Университетский проспект, д. 28, лит. Б,3506', 5604, 334472, 334407, 334037, 334044),
('2023-06-27 10:00:00', '2023-06-27 11:35:00',
'Геометрия и топология, экзамен',
'Университетский проспект, д. 28, лит. Б,3506', 5604, 334037),
('2023-06-27 14:00:00', '2023-06-27 15:35:00',
'Геометрия и топология, экзамен',
'Университетский проспект, д. 28, лит. Б,3506', 5604, 334044),
('2023-06-28 10:00:00', '2023-06-28 11:35:00',
'Геометрия и топология, экзамен',
'Университетский проспект, д. 28, лит. Б,3506', 5604, 334472),
('2023-06-28 14:00:00', '2023-06-28 15:35:00',
'Геометрия и топология, экзамен',
'Университетский проспект, д. 28, лит. Б,3506', 5604, 334407),
('2023-06-21 15:00:00', '2023-06-21 16:35:00',
'Математический анализ, консультация групповая',
'Университетский проспект, д. 28, лит. Б, 2508', 2721, 334421, 334123, 334365),
('2023-06-22 10:00:00', '2023-06-22 11:35:00',
'Математический анализ, экзамен',
'Университетский проспект, д. 28, лит. Б, 2512', 2721, 334421),
('2023-06-23 10:00:00', '2023-06-23 11:35:00',
'Математический анализ, экзамен',
'Университетский проспект, д. 28, лит. Б, 2512', 2721, 334123),
('2023-06-24 10:00:00', '2023-06-24 11:35:00',
'Математический анализ, экзамен',
'Университетский проспект, д. 28, лит. Б, 2512', 2721, 334365),
('2023-06-29 15:00:00', '2023-06-29 16:35:00',
'Математический анализ, консультация групповая',
'Университетский проспект, д. 28, лит. Б, 2520', 2721, 334336),
('2023-06-30 10:00:00', '2023-06-30 11:35:00',
'Математический анализ, экзамен',
'Университетский проспект, д. 28, лит. Б, 2520', 2721, 334336),
('2023-06-10 15:00:00', '2023-06-10 16:35:00',
'Математический анализ, консультация групповая',
'Университетский проспект, д. 28, лит. Б,3506', 3025, 334738, 334733, 334760, 334758),
('2023-06-13 10:00:00', '2023-06-13 11:35:00',
'Математический анализ, экзамен',
'Университетский проспект, д. 28, лит. Б,3506', 3025, 334738),
('2023-06-13 11:00:00', '2023-06-13 12:30:00',
'Научное исследование, аттестационное испытание',
'Университетский проспект, д. 28, лит. Б,4516', 3025, 356398),
('2023-06-13 13:00:00', '2023-06-13 14:35:00',
'Математический анализ, экзамен',
'Университетский проспект, д. 28, лит. Б,3506', 3025, 334733),
('2023-06-13 13:00:00', '2023-06-13 14:30:00',
'Научное исследование, аттестационное испытание',
'Университетский проспект, д. 28, лит. В,4384', 3025, 356395),
('2023-06-13 15:00:00', '2023-06-13 16:30:00',
'Научное исследование, аттестационное испытание',
'Университетский проспект, д. 28, лит. Б,4502', 3025, 356362),
('2023-06-13 17:00:00', '2023-06-13 18:30:00',
'Научное исследование, аттестационное испытание',
'Университетский проспект, д. 28, лит. Б,4511', 3025, 356369),
('2023-06-14 10:00:00', '2023-06-14 11:35:00',
'Математический анализ, экзамен',
'Университетский проспект, д. 28, лит. Б,3506', 3025, 334760),
('2023-06-14 13:00:00', '2023-06-14 14:35:00',
'Математический анализ, экзамен',
'Университетский проспект, д. 28, лит. Б,3506', 3025, 334758),
('2023-06-14 16:00:00', '2023-06-14 17:35:00',
'Электив. Некоторые вопросы геометрической теории функций, консультация групповая',
'Университетский проспект, д. 28, лит. Б,3522', 3025, 334767),
('2023-06-15 10:00:00',
'2023-06-15 11:35:00',
'Электив. Некоторые вопросы геометрической теории функций, экзамен',
'Университетский проспект, д. 28, лит. Б,3522', 3025, 334767),
('2023-06-13 17:00:00', '2023-06-13 18:30:00',
'Научное исследование, аттестационное испытание',
'Университетский проспект, д. 28, лит. Д,3302', 2957, 356370),
('2023-06-05 11:00:00', '2023-06-05 12:35:00', 'Архитектура ЭВМ, зачёт',
'Университетский проспект, д. 28, лит. Д,405', 2957, 334738),
('2023-06-05 13:00:00', '2023-06-05 14:35:00', 'Архитектура ЭВМ, зачёт',
'Университетский проспект, д. 28, лит. Д,405', 2957, 334758),
('2023-06-13 11:00:00', '2023-06-13 12:30:00',
'Научное исследование, аттестационное испытание',
'Университетский проспект, д. 28, лит. В,3389', 2957, 356410),
('2023-06-13 13:00:00', '2023-06-13 14:30:00',
'Научное исследование, аттестационное испытание',
'Университетский проспект, д. 28, лит. В,3390', 2957, 356381),
('2023-06-13 15:00:00', '2023-06-13 16:30:00',
'Научное исследование, аттестационное испытание',
'Университетский проспект, д. 28, лит. Д,3349', 2957, 356384),
('2023-06-17 15:00:00', '2023-06-17 16:35:00',
'Информатика, консультация групповая',
'Университетский проспект, д. 28, лит. Б,3506', 2957, 334472, 334407, 334037, 334044),
('2023-06-19 10:00:00', '2023-06-19 11:35:00', 'Информатика, экзамен',
'Университетский проспект, д. 28, лит. Д, 2406', 2957, 334037),
('2023-06-19 13:00:00', '2023-06-19 14:35:00', 'Информатика, экзамен',
'Университетский проспект, д. 28, лит. Д, 2406', 2957, 334044),
('2023-06-20 10:00:00', '2023-06-20 11:35:00', 'Информатика, экзамен',
'Университетский проспект, д. 28, лит. Д,2448', 2957, 334472),
('2023-06-20 13:00:00', '2023-06-20 14:35:00', 'Информатика, экзамен',
'Университетский проспект, д. 28, лит. Д,2448', 2957, 334407),
('2023-06-16 15:00:00', '2023-06-16 16:35:00',
'Параллельное программирование, консультация групповая',
'Университетский проспект, д. 28, лит. Д,2448', 2744, 334733, 334760, 334738, 334758),
('2023-06-17 10:00:00', '2023-06-17 11:35:00',
'Параллельное программирование, экзамен',
'Университетский проспект, д. 28, лит. Д, 2406', 2744, 334738),
('2023-06-17 13:00:00', '2023-06-17 14:35:00',
'Параллельное программирование, экзамен',
'Университетский проспект, д. 28, лит. Д, 2406', 2744, 334733),
('2023-06-19 10:00:00', '2023-06-19 11:35:00',
'Параллельное программирование, экзамен',
'Университетский проспект, д. 28, лит. Д,2414', 2744, 334760),
('2023-06-19 13:00:00', '2023-06-19 14:35:00',
'Параллельное программирование, экзамен',
'Университетский проспект, д. 28, лит. Д,2414', 2744, 334758),
('2023-06-24 15:00:00', '2023-06-24 16:35:00',
'Программирование на языке C, консультация групповая',
'Университетский проспект, д. 28, лит. Б, 2520', 2744, 334336),
('2023-06-01 09:30:00', '2023-06-01 11:05:00',
'Теория сложности вычислений, лекция',
'Университетский проспект, д. 28, лит. В, 3394', 2715, 334732),
('2023-06-01 10:00:00', '2023-06-01 11:35:00',
'Производственная практика (научно-исследовательская работа), зачёт',
'Университетский проспект, д. 28, лит. В,3395', 2715, 334027),
('2023-06-01 11:00:00', '2023-06-01 12:35:00',
'Учебная практика 2 (научно-исследовательская работа), зачёт',
'Университетский проспект, д. 28, лит. В,3389', 2715, 334753, 334770, 334750, 334736),
('2023-06-01 11:15:00', '2023-06-01 12:50:00',
'Учебная практика 1 (научно-исследовательская работа), зачёт',
'Университетский проспект, д. 28, лит. Д,2448', 2715, 334733, 334760, 334738, 334758),
('2023-06-22 15:00:00', '2023-06-22 16:35:00',
'Теория сложности вычислений, консультация групповая',
'Университетский проспект, д. 28, лит. Б, 2518', 2715, 334732),
('2023-06-23 10:00:00', '2023-06-23 11:35:00',
'Теория сложности вычислений, экзамен',
'Университетский проспект, д. 28, лит. Б, 2518', 2715, 334732),

('2023-06-30 15:00:00', '2023-06-30 16:35:00',
'Математическая логика, консультация групповая',
'Университетский проспект, д. 28, лит. Б, 2506', 2715, 334733, 334760, 334738, 334758),

]

TEST_CASES = [
    Case(data=USER_INFO, path_to_file="tests/csv_for_test/Educator.csv"),
    Case(data=GROUP_INFO, path_to_file="tests/csv_for_test/Group.csv"),
]

EVENT_TEST_CASES = [Case(data=EVENTS_INFO, path_to_file="tests/csv_for_test/Event.csv")]
DIVISION_TEST_CASE = [Case(data=DIVISION_INFO, path_to_file="tests/csv_for_test/Division.csv")]
PROGRAM_TEST_CASE = [Case(data=PROGRAM_INFO, path_to_file="tests/csv_for_test/Program.csv")]


@pytest.mark.asyncio
@pytest.mark.parametrize('test', PROGRAM_TEST_CASE)
async def test_get_program_info_in_csv(test: Case) -> None:
    frame = pandas.read_csv(test.path_to_file)
    ids_list = [info[0] for info in test.data]
    rows = frame.loc[frame['id'].isin(ids_list)]
    rows = rows[['id', 'name', 'level_name', 'year']]
    assert set(test.data) == set((rows.itertuples(index=False, name=None)))


@pytest.mark.asyncio
@pytest.mark.parametrize('test', TEST_CASES)
async def test_get_user_info_in_csv(test: Case) -> None:
    frame = pandas.read_csv(test.path_to_file)
    ids_list = [info[0] for info in test.data]
    rows = frame.loc[frame['id'].isin(ids_list)]
    assert set(test.data) == set((rows.itertuples(index=False, name=None)))


@pytest.mark.asyncio
@pytest.mark.parametrize('test', DIVISION_TEST_CASE)
async def test_get_division_info_in_csv(test: Case) -> None:
    frame = pandas.read_csv(test.path_to_file)
    for elem in test.data:
        rows = frame.loc[(frame['oid'] == elem[0])
                         & (frame['alias'] == elem[1])
                         & (frame['name'] == elem[2])]
        assert len(rows) == 1


@pytest.mark.asyncio
@pytest.mark.parametrize('test', EVENT_TEST_CASES)
async def test_get_event_info_in_csv(test: Case) -> None:
    frame = pandas.read_csv(test.path_to_file)
    for elem in test.data:
        rows = frame.loc[(frame['start_time'] == elem[0])
                         & (frame['end_time'] == elem[1])
                         & (frame['description'] == elem[2]) &
                         (frame['location'] == elem[3])]
        assert len(rows) == 1
        event_id = rows['id'].iloc[0]
        user_to_event_frame = pandas.read_csv('tests/csv_for_test/EducatorToEvent.csv')
        group_to_event_frame = pandas.read_csv('tests/csv_for_test/GroupToEvent.csv')
        user_rows = user_to_event_frame.loc[(user_to_event_frame['educator_id'] == elem[4])
                                            & (user_to_event_frame['event_id'] == event_id)]

        for i in range(5, len(elem)):
            group_rows = group_to_event_frame.loc[(group_to_event_frame['group_id'] == elem[i])
                                                  & (group_to_event_frame['event_id'] == event_id)]
            assert len(group_rows) == 1
        assert len(user_rows) == 1
